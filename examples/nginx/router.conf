server {
	listen 80;
	# server_name example.com www.example.com;

	# Root directory for serving static files
	root /app/www/public;  # Path where your static files (HTML, CSS, JS) are located

	#index index.html # Default index file to serve

	 # Enable gzip compression
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_min_length 1024;
	gzip_comp_level 5;
	gzip_vary on;
	gzip_proxied any;

	# force compress
	#gzip_static on;
	#gzip_http_version 1.0;
	#gzip_disable "msie6";

	# Serve static files with cache headers
	location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|woff2?|ttf|svg|map|json)$ {
		expires 7d;
		add_header Cache-Control "public, no-transform";
		try_files $uri =404;
	}

	# Serve static files (e.g. images, JS, CSS)
	location / {
		try_files $uri @backend;
	}

	# Forward all requests to the root ('/') to your custom server
	location = / {
		proxy_pass http://server:4000;  # Forward to your custom server on port 4000
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Handle login and logout via Node.js Express server
	location /login {
		proxy_pass http://login:3000;  # Forward to the Node.js service
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /logout {
		proxy_pass http://login:3000;  # Forward to the Node.js service
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Forward all other requests to your custom server
	location @backend {
		proxy_pass http://server:4000;  # Forward to the custom server service
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}

