<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>React Page</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <!-- React and Babel CDN -->
  <!-- <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script> -->
  
  <!-- <link rel="stylesheet" href="/dist/main.min.css"> -->

  <script src="/dist/react.development.js"></script>
  <script src="/dist/react-dom.development.js"></script>
  <script src="/dist/babel.min.js"></script>
  <script src="/dist/idb.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin: 0;
    }
    header {
      background-color: #282c34;
      color: white;
      padding: 20px;
    }
    main {
      padding: 20px;
    }
    footer {
      padding: 10px;
      border-top: 1px solid #ccc;
      margin-top: 40px;
    }
    ul {
      list-style: none;
      padding: 0;
    }
    li {
      background: white;
      margin-bottom: 10px;
      padding: 10px;
      border-radius: 6px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    button {
      margin-top: 10px;
      padding: 10px 20px;
      font-size: 14px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="root"></div>

  <!-- React Code -->
  <script type="text/babel">

    const { useState, useEffect } = React;

    function Header() {
      return (
        <header>
          <h1>Welcome to My React Page</h1>
        </header>
      );
    }

    function Content() {

      const [users, setUsers] = useState([]);
      const [page, setPage] = useState(1);
      const [loading, setLoading] = useState(true);
      // const [visibleCount, setVisibleCount] = useState(3);

      // const showMore = () => {
      //   setVisibleCount(prev => prev + 3);
      // };

      // const showLess = () => {
      //   setVisibleCount(3);
      // };

      async function initDB() {
        return await idb.openDB('test', 1, {
          upgrade(db) {
            db.createObjectStore('users');
          },
        });
      }

      const USERS_PER_PAGE = 3;

      async function fetchUsers(page) {
        const start = (page - 1) * USERS_PER_PAGE;
        const response = await fetch(`/api/user?o=${start}`);
        return await response.json();
      }

      async function loadUsers(page) {
        const db = await initDB();
        // const cached = await db.get('users', `page-${page}`);
        const cached = false;

        if (cached) {
          console.log(`Loaded page ${page} from cache`);
          setUsers(prev => [...prev, ...cached]);
        } else {
          const newUsers = await fetchUsers(page);
          setUsers(prev => [...prev, ...newUsers]);
          await db.put('users', newUsers, `page-${page}`);
          console.log(`Fetched page ${page} from network and cached`);
        }
        setLoading(false);
      }

      useEffect(() => {
        loadUsers(page);
      }, [page]);

      const showMore = () => {
        setLoading(true);
        setPage(prev => prev + 1);
      };

      // useEffect(() => {
      //   fetch('/api/users')
      //     .then(response => response.json())
      //     .then(data => {
      //       setUsers(data);
      //       setLoading(false);
      //     })
      //     .catch(error => {
      //       console.error('Error fetching posts:', error);
      //       setLoading(false);
      //     });
      // }, []);


      return (
        <main>
          <h1>Users</h1>
            <ul>
              {users.map(i => (
                <li key={i.id}>
                  <strong>{i.name}</strong>
                  <p>{i.email}</p>
                </li>
              ))}
            </ul>
            {loading && <p>Loading...</p>}
            {!loading && <button onClick={showMore}>Show More</button>}
          
        </main>
      );
    }

    function Footer() {
      return (
        <footer>
          <p>&copy; 2025 My React Page</p>
        </footer>
      );
    }

    function App() {
      return (
        <div>
          <Header />
          <Content />
          <Footer />
        </div>
      );
    }

 

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<App />);
  </script>
</body>
</html>
